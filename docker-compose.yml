services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - WATCHPACK_POLLING=true
    env_file:
      - ./.env
    depends_on:
      - backend
    networks:
      - acaceta_app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - tmp:/app/tmp
    environment:
      - FLASK_APP=app.app:create_app
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=1
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - ELASTICSEARCH_USER=${ELASTICSEARCH_USER}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD}
      - ELASTICSEARCH_USE_SSL=${ELASTICSEARCH_USE_SSL}
      - ELASTICSEARCH_VERIFY_CERTS=${ELASTICSEARCH_VERIFY_CERTS}
      - ELASTICSEARCH_USE_AUTH=${ELASTICSEARCH_USE_AUTH}
    env_file:
      - ./.env
    networks:
      - acaceta_app-network
    depends_on:
      - mongodb
      - elasticsearch

  mongodb:
    image: mongo:latest
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - acaceta_app-network
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "pgrep", "mongod"]
      interval: 10s
      timeout: 10s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=z#]6]^a!w:mvEyXE-??n
      - network.host=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - acaceta_app-network
    env_file:
      - ./.env
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fsSL http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo_data:
  elasticsearch_data:
  kibana_data:
  tmp:

networks:
  acaceta_app-network:
    driver: bridge
