include /etc/nginx/mime.types;
types {
    application/javascript mjs js;
    text/javascript mjs js;
    application/javascript module;
    text/css css;
    image/svg+xml svg svgz;
}

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    absolute_redirect off;

    # Security headers
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: /api/placeholder/; connect-src 'self'" always;

    # Handle JavaScript modules (.mjs files)
    location ~ \.mjs$ {
        default_type application/javascript;
        add_header Content-Type application/javascript always;
        add_header X-Content-Type-Options nosniff always;
        try_files $uri =404;
        expires -1;
        access_log off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
    }

    # Handle regular JavaScript files
    location ~ \.js$ {
        default_type application/javascript;
        add_header Content-Type application/javascript always;
        add_header X-Content-Type-Options nosniff always;
        try_files $uri =404;
        expires -1;
        access_log off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
    }

    # Handle CSS files
    location ~ \.css$ {
        add_header Content-Type "text/css" always;
        try_files $uri =404;
        access_log off;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
    }

    # Handle SVG files
    location ~ \.svg$ {
        add_header Content-Type "image/svg+xml" always;
        try_files $uri =404;
        access_log off;
    }

    # Handle HTML files and routing
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
    }

    # Specific handling for index.html
    location = /index.html {
        add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate" always;
        expires -1;
    }

    # Handle 404 errors
    error_page 404 /index.html;

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
}
